SELECT * FROM(
SELECT 
CASE
          WHEN TP_SITUACAO                                                                                                                                           = 'C'
          AND NM_FLUXO_OCORRENCIA                                                                                                                                    = 'Análise'
          AND NVL( TO_DATE(DATA_ANALISE, 'DD/MM/RRRR HH24:MI:SS'), TO_DATE(DATA_ATUAL, 'DD/MM/RRRR HH24:MI:SS') ) - TO_DATE(DATA_AVALIACAO, 'DD/MM/RRRR HH24:MI:SS') > QT_SLA
          AND DATA_ANALISE                                                                                                                                          IS NULL
          THEN 'Concluído'
          WHEN TP_SITUACAO                                                                                                                                           = 'C'
          AND NM_FLUXO_OCORRENCIA                                                                                                                                    = 'Análise'
          AND NVL( TO_DATE(DATA_ANALISE, 'DD/MM/RRRR HH24:MI:SS'), TO_DATE(DATA_ATUAL, 'DD/MM/RRRR HH24:MI:SS') ) - TO_DATE(DATA_AVALIACAO, 'DD/MM/RRRR HH24:MI:SS') > QT_SLA
          THEN 'Concluído com atraso'
          WHEN TP_SITUACAO                                                                                                                                             = 'C'
          AND NM_FLUXO_OCORRENCIA                                                                                                                                      = 'Verificação'
          AND NVL( TO_DATE(DATA_VERIFICACAO, 'DD/MM/RRRR HH24:MI:SS'), TO_DATE(DATA_ATUAL, 'DD/MM/RRRR HH24:MI:SS') ) - TO_DATE(DATA_ANALISE, 'DD/MM/RRRR HH24:MI:SS') > QT_SLA
          THEN 'Concluído com atraso'
          WHEN TP_SITUACAO = 'C'
          THEN 'Concluído'
          WHEN TP_SITUACAO                                                                                                                                                    = 'D'
          AND TRUNC( NVL( TO_DATE(DATA_ANALISE, 'DD/MM/RRRR HH24:MI:SS'), TO_DATE(DATA_ATUAL, 'DD/MM/RRRR HH24:MI:SS') ) - TO_DATE(DATA_AVALIACAO, 'DD/MM/RRRR HH24:MI:SS') ) < QT_SLA
          THEN 'Disponível para análise'
          WHEN TP_SITUACAO                                                                                                                                                    = 'D'
          AND TRUNC( NVL( TO_DATE(DATA_ANALISE, 'DD/MM/RRRR HH24:MI:SS'), TO_DATE(DATA_ATUAL, 'DD/MM/RRRR HH24:MI:SS') ) - TO_DATE(DATA_AVALIACAO, 'DD/MM/RRRR HH24:MI:SS') ) > QT_SLA
          THEN 'Atrasado'
          WHEN TP_SITUACAO = 'A'
          THEN 'Aguardando conclusão'
          WHEN TP_SITUACAO = 'R'
          THEN 'Recusado'
          WHEN TP_SITUACAO = 'D'
          THEN INITCAP(LOWER (TO_CHAR (TP_SITUACAO_ETAPA))) 
          ELSE TP_SITUACAO
        END AS STATUS_SITUACAO,
        NVL(DT_FINALIZACAO,DT_ARQUIVADO) AS DT_CONCLUSAO,
        DENSE_RANK() OVER (PARTITION BY MVGE.CD_REGISTRO_OCORRENCIA ORDER BY MVGE.N2 DESC) AS NR_ORDEM,
        MVGE.* 
FROM(
SELECT * FROM (
    SELECT 
      TO_CHAR(SYSDATE, 'DD/MM/RRRR HH24:MI:SS') AS DATA_ATUAL,
      TRUNC (RO.DT_REGISTRO) AS DT_INTEGRA,
      DENSE_RANK() OVER (PARTITION BY RO.CD_REGISTRO_OCORRENCIA ORDER BY FQO.DT_ACEITACAO DESC) AS NR_ORD,
      FQO.CD_REGISTRO_OCORRENCIA,
      FQO.CD_FLUXO_OCORRENCIA,
      FQO.CD_FLUXO_OCORRENCIA AS N2,
      FO.NM_FLUXO_OCORRENCIA,
      --FO.NM_FLUXO_OCORRENCIA AS D2,
      FQO.TP_SITUACAO,
      DECODE(FQO.TP_SITUACAO,'C','CONCLUIDO','D','ATRASADO','A','AGUARDANDO CONLUSÃO','R','RECUSADO') AS TP_SITUACAO_ETAPA,
      FQO.TP_RESPONSAVEL_FLUXO,
      NVL(FQO.QT_SLA,0) AS QT_SLA,
      FQO.DT_CONCLUSAO,
      FQO.DS_COMENTARIO,
      --HRO.DS_COMENTARIO AS C2,
      FQO.DT_ACEITACAO,
      OC.CD_TIPO_OCORRENCIA,
      TOA.NM_TIPO_OCORRENCIA,
      RO.CD_OCORRENCIA,
      OC.NM_OCORRENCIA,
      RO.DT_REGISTRO,
      RO.CD_METODO_DETECCAO_OCORRENCIA,
      MDO.DS_METODO_DETECCAO AS DS_DETECAO,
      RO.CD_ACAO_IMEDIATA_OCORRENCIA,
      AIO.DS_ACAO_IMEDIATA,
      DECODE (RO.SN_PROCEDE,'S','SIM','N','NÃO',NULL,'EM ABERTO')               AS SN_PROCEDE,
      DECODE(RO.TP_CRITICIDADE, 1,'NÃO SE APLICA',2, 'NC-MAIOR', 3, 'NC-MENOR') AS TP_CRITICIDADE,
      CASE
        WHEN RO.TP_GRAU_NEA = 'N' AND RO.TP_INCIDENTE IS NULL THEN 'DANO LEVE'
        WHEN RO.TP_GRAU_NEA = '0' AND RO.TP_INCIDENTE IS NULL THEN 'DANO MODERADO'
        WHEN RO.TP_GRAU_NEA = 'L' AND RO.TP_INCIDENTE IS NULL THEN 'EVENTO SENTINELA'
        WHEN RO.TP_GRAU_NEA = 'M' AND RO.TP_INCIDENTE IS NULL THEN 'NÃO PREVENÍVEL'
        WHEN RO.TP_GRAU_NEA = 'G' AND RO.TP_INCIDENTE IS NULL THEN 'DANO GRANDE'
        WHEN RO.TP_GRAU_NEA IS NULL AND RO.TP_INCIDENTE IS NULL THEN 'NENHUM DANO'
        WHEN RO.TP_INCIDENTE = 'C' AND RO.TP_GRAU_NEA IS NULL THEN 'CIRCUNSTÂNCIA DE RISCO'
        WHEN RO.TP_INCIDENTE = 'M' AND RO.TP_GRAU_NEA IS NULL THEN 'NEAR MISS(Quase Erro)'
        WHEN RO.TP_INCIDENTE = 'N' AND RO.TP_GRAU_NEA IS NULL THEN 'NENHUM DANO'
      END TP_INC_NEA,
      RO.CD_ATENDIMENTO,
      RO.CD_PACIENTE,
      --RO.CD_ORGANIZACAO_REGISTRANTE AS EMPRESA_REGISTRANTE, 
      (SELECT DS_CENTRO_CUSTO FROM DBAPORTAL.CENTRO_CUSTO WHERE CD_CENTRO_CUSTO = RO.CD_CENTRO_CUSTO_REGISTRANTE) AS ST_REGISTRANTE,
      (SELECT CD_USUARIO_PORTAL FROM DBAPORTAL.PESSOA WHERE CD_PESSOA = RO.ID_USUARIO_REGISTRANTE) AS DRT_REGISTRANTE,
      --RO.CD_ORGANIZACAO_RELATOR AS EMPRESA_RELATOR, 
      (SELECT DS_CENTRO_CUSTO FROM DBAPORTAL.CENTRO_CUSTO WHERE CD_CENTRO_CUSTO = RO.CD_CENTRO_CUSTO_RELATOR) AS ST_RELATOR, 
      (SELECT CD_USUARIO_PORTAL FROM DBAPORTAL.PESSOA WHERE CD_PESSOA = RO.ID_USUARIO_RELATOR) AS DRT_RELATOR,
      RO.DS_RESUMO,
      RO.DS_REGISTRO,
      (SELECT NVL(DATA_AVALIACAO, DATA_AVALIACAO2) AS DATA_AVALIACAO
      FROM
        (SELECT HRO2.CD_REGISTRO_OCORRENCIA,
          HRO2.DT_ACEITACAO,
          HRO2.DS_ACAO
        FROM DBAPORTAL.HISTORICO_REG_OCORRENCIA HRO2
        WHERE HRO2.CD_REGISTRO_OCORRENCIA       = RO.CD_REGISTRO_OCORRENCIA
        ) PIVOT( MAX(DT_ACEITACAO) FOR DS_ACAO IN ( 'Avaliação concluída.' AS DATA_AVALIACAO, 'Avaliação concluída' AS DATA_AVALIACAO2 ) )
      ) AS DATA_AVALIACAO,
      (SELECT NVL(DATA_ANALISE, DATA_ANALISE2)
      FROM
        (SELECT HRO2.CD_REGISTRO_OCORRENCIA,
          HRO2.DT_ACEITACAO,
          HRO2.DS_ACAO
        FROM DBAPORTAL.HISTORICO_REG_OCORRENCIA HRO2
        WHERE HRO2.CD_REGISTRO_OCORRENCIA       = RO.CD_REGISTRO_OCORRENCIA
        ) PIVOT( MAX(DT_ACEITACAO) FOR DS_ACAO IN ( 'Análise concluída.' AS DATA_ANALISE, 'Análise concluída' AS DATA_ANALISE2 ) )
      ) AS DATA_ANALISE,
      (SELECT DATA_VERIFICACAO
      FROM
        (SELECT HRO2.CD_REGISTRO_OCORRENCIA,
          HRO2.DT_ACEITACAO,
          HRO2.DS_ACAO
        FROM DBAPORTAL.HISTORICO_REG_OCORRENCIA HRO2
        WHERE HRO2.CD_REGISTRO_OCORRENCIA       = RO.CD_REGISTRO_OCORRENCIA
        ) PIVOT( MAX(DT_ACEITACAO) FOR DS_ACAO IN ('Verificação concluída.' AS DATA_VERIFICACAO) )
      ) AS DATA_VERIFICACAO
    FROM DBAPORTAL.REGISTRO_OCORRENCIA RO
    
    LEFT JOIN DBAPORTAL.FLUXO_QUADRO_OCORRENCIA FQO     ON FQO.CD_REGISTRO_OCORRENCIA = RO.CD_REGISTRO_OCORRENCIA
    LEFT JOIN DBAPORTAL.FLUXO_OCORRENCIA FO             ON FO.CD_FLUXO_OCORRENCIA = FQO.CD_FLUXO_OCORRENCIA
    LEFT JOIN DBAPORTAL.OCORRENCIA OC                   ON OC.CD_OCORRENCIA = RO.CD_OCORRENCIA
    LEFT JOIN DBAPORTAL.METODO_DETECCAO_OCORRENCIA MDO  ON MDO.CD_METODO_DETECCAO_OCORRENCIA = RO.CD_METODO_DETECCAO_OCORRENCIA
    LEFT JOIN DBAPORTAL.ACAO_IMEDIATA_OCORRENCIA AIO    ON AIO.CD_ACAO_IMEDIATA_OCORRENCIA = RO.CD_ACAO_IMEDIATA_OCORRENCIA
    LEFT JOIN DBAPORTAL.HISTORICO_REG_OCORRENCIA HRO    ON HRO.CD_REGISTRO_OCORRENCIA = RO.CD_REGISTRO_OCORRENCIA
    LEFT JOIN DBAPORTAL.TIPO_OCORRENCIA TOA             ON TOA.CD_TIPO_OCORRENCIA = OC.CD_TIPO_OCORRENCIA
    
    WHERE RO.DT_REGISTRO BETWEEN TO_DATE ('01/01/2023','DD/MM/RRRR') AND SYSDATE
    AND HRO.TP_ACAO NOT             IN ('V')
    AND FQO.TP_SITUACAO NOT         IN ('A')
    AND FQO.CD_FLUXO_OCORRENCIA NOT IN (4,5)
    --AND FQO.CD_FLUXO_OCORRENCIA IN (6)
      /*
    AND FQO.CD_REGISTRO_OCORRENCIA IN ( 
      55994                                   --FASE FINALIZADA
      ,54971                                  --FASE ANALISE
      ,56203                                  --FASE AVALIA
      ,54301                                  --FASE VERIFICA
      ,55167                                  --FASE ARQUIVA
      )*/
    )
     PIVOT( 
      MAX(DT_CONCLUSAO) 
        FOR CD_FLUXO_OCORRENCIA 
          IN(
            '1' AS DT_FORMALIZACAO 
            ,'2' AS DT_AVALIACAO 
            ,'3' AS DT_ANALISE 
            ,'6' AS DT_VERIFICACAO 
            ,'7' AS DT_ARQUIVADO 
            ,'8' AS DT_FINALIZACAO 
            ) 
            )
            
  ORDER BY CD_REGISTRO_OCORRENCIA DESC
  )MVGE
  WHERE NR_ORD IN (1)
  
  )
  WHERE NR_ORDEM IN (1)
  --AND CD_REGISTRO_OCORRENCIA = 54326
  GROUP BY
  STATUS_SITUACAO,
  NR_ORD,
  DATA_ATUAL, 
  DT_INTEGRA, 
  CD_REGISTRO_OCORRENCIA, 
  N2,
  NM_FLUXO_OCORRENCIA, 
  TP_SITUACAO, 
  TP_SITUACAO_ETAPA, 
  TP_RESPONSAVEL_FLUXO, 
  --DS_RESP_FLUXO,
  QT_SLA, 
  DS_COMENTARIO, 
  DT_ACEITACAO, 
  CD_TIPO_OCORRENCIA, 
  NM_TIPO_OCORRENCIA, 
  CD_OCORRENCIA, 
  NM_OCORRENCIA, 
  DT_REGISTRO, 
  CD_METODO_DETECCAO_OCORRENCIA, 
  DS_DETECAO, 
  CD_ACAO_IMEDIATA_OCORRENCIA, 
  DS_ACAO_IMEDIATA, 
  SN_PROCEDE, 
  TP_CRITICIDADE, 
  TP_INC_NEA, 
  CD_ATENDIMENTO, 
  CD_PACIENTE, 
  ST_REGISTRANTE, 
  DRT_REGISTRANTE, 
  ST_RELATOR, 
  DRT_RELATOR, 
  DS_RESUMO, 
  DS_REGISTRO, 
  DATA_AVALIACAO, 
  DATA_ANALISE, 
  DATA_VERIFICACAO, 
  DT_FORMALIZACAO, 
  DT_AVALIACAO, 
  DT_ANALISE, 
  --DT_ANDAMENTO, 
  --DT_APROVACAO, 
  DT_VERIFICACAO, 
  DT_ARQUIVADO, 
  DT_CONCLUSAO,
  NR_ORDEM,
  DT_FINALIZACAO