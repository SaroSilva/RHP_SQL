SELECT * FROM( --83.813 SEM DISTINCT
SELECT 
CASE
          WHEN TP_SITUACAO                                                                                                                                           = 'C'
          AND NM_FLUXO_OCORRENCIA                                                                                                                                    = 'Análise'
          AND NVL( TO_DATE(DATA_ANALISE, 'DD/MM/RRRR HH24:MI:SS'), TO_DATE(DATA_ATUAL, 'DD/MM/RRRR HH24:MI:SS') ) - TO_DATE(DATA_AVALIACAO, 'DD/MM/RRRR HH24:MI:SS') > QT_SLA
          AND DATA_ANALISE                                                                                                                                          IS NULL
          THEN 'Concluído'
          WHEN TP_SITUACAO                                                                                                                                           = 'C'
          AND NM_FLUXO_OCORRENCIA                                                                                                                                    = 'Análise'
          AND NVL( TO_DATE(DATA_ANALISE, 'DD/MM/RRRR HH24:MI:SS'), TO_DATE(DATA_ATUAL, 'DD/MM/RRRR HH24:MI:SS') ) - TO_DATE(DATA_AVALIACAO, 'DD/MM/RRRR HH24:MI:SS') > QT_SLA
          THEN 'Concluído com atraso'
          WHEN TP_SITUACAO                                                                                                                                             = 'C'
          AND NM_FLUXO_OCORRENCIA                                                                                                                                      = 'Verificação'
          AND NVL( TO_DATE(DATA_VERIFICACAO, 'DD/MM/RRRR HH24:MI:SS'), TO_DATE(DATA_ATUAL, 'DD/MM/RRRR HH24:MI:SS') ) - TO_DATE(DATA_ANALISE, 'DD/MM/RRRR HH24:MI:SS') > QT_SLA
          THEN 'Concluído com atraso'
          WHEN TP_SITUACAO = 'C'
          THEN 'Concluído'
          WHEN TP_SITUACAO                                                                                                                                                    = 'D'
          AND TRUNC( NVL( TO_DATE(DATA_ANALISE, 'DD/MM/RRRR HH24:MI:SS'), TO_DATE(DATA_ATUAL, 'DD/MM/RRRR HH24:MI:SS') ) - TO_DATE(DATA_AVALIACAO, 'DD/MM/RRRR HH24:MI:SS') ) < QT_SLA
          THEN 'Disponível para análise'
          WHEN TP_SITUACAO                                                                                                                                                    = 'D'
          AND TRUNC( NVL( TO_DATE(DATA_ANALISE, 'DD/MM/RRRR HH24:MI:SS'), TO_DATE(DATA_ATUAL, 'DD/MM/RRRR HH24:MI:SS') ) - TO_DATE(DATA_AVALIACAO, 'DD/MM/RRRR HH24:MI:SS') ) > QT_SLA
          THEN 'Atrasado'
          WHEN TP_SITUACAO = 'A'
          THEN 'Aguardando conclusão'
          WHEN TP_SITUACAO = 'R'
          THEN 'Recusado'
          WHEN TP_SITUACAO = 'D'
          THEN INITCAP(LOWER (TO_CHAR (TP_SITUACAO_ETAPA))) 
          ELSE TP_SITUACAO
        END AS STATUS_SITUACAO,
        BASE.*
FROM (
SELECT 
  RO.CD_REGISTRO_OCORRENCIA AS CD_REGISTRO,
  DENSE_RANK() OVER (PARTITION BY RO.CD_REGISTRO_OCORRENCIA ORDER BY HRO.DT_ACEITACAO DESC) AS NR_ORD,
  DENSE_RANK() OVER (PARTITION BY RO.CD_REGISTRO_OCORRENCIA ORDER BY FQO.NR_ORDENACAO DESC)AS NR_ORDENACAO,
    -- CALCULOS KAKASHI
  FQO.QT_SLA,
  TO_CHAR(SYSDATE, 'DD/MM/RRRR HH24:MI:SS') AS DATA_ATUAL,
  TRUNC (RO.DT_REGISTRO) AS DT_INTEGRA,
  RO.DT_REGISTRO,
  RO.DH_OCORRIDO,
  RO.HR_OCORRIDO,
  HRO.DT_MUDANCA_FLUXO, 
  HRO.DT_ACEITACAO,
  HRO.DS_COMENTARIO,
  FQO.DT_CONCLUSAO,
  (SELECT NVL(DATA_AVALIACAO, DATA_AVALIACAO2) AS DATA_AVALIACAO
          FROM
            (SELECT HRO2.CD_REGISTRO_OCORRENCIA,
              HRO2.DT_ACEITACAO,
              HRO2.DS_ACAO
            FROM DBAPORTAL.HISTORICO_REG_OCORRENCIA HRO2
            WHERE HRO2.CD_REGISTRO_OCORRENCIA       = RO.CD_REGISTRO_OCORRENCIA
            ) PIVOT( MAX(DT_ACEITACAO) FOR DS_ACAO IN ( 'Avaliação concluída.' AS DATA_AVALIACAO, 'Avaliação concluída' AS DATA_AVALIACAO2 ) )
          ) AS DATA_AVALIACAO,
          (SELECT NVL(DATA_ANALISE, DATA_ANALISE2)
          FROM
            (SELECT HRO2.CD_REGISTRO_OCORRENCIA,
              HRO2.DT_ACEITACAO,
              HRO2.DS_ACAO
            FROM DBAPORTAL.HISTORICO_REG_OCORRENCIA HRO2
            WHERE HRO2.CD_REGISTRO_OCORRENCIA       = RO.CD_REGISTRO_OCORRENCIA
            ) PIVOT( MAX(DT_ACEITACAO) FOR DS_ACAO IN ( 'Análise concluída.' AS DATA_ANALISE, 'Análise concluída' AS DATA_ANALISE2 ) )
          ) AS DATA_ANALISE,
          (SELECT DATA_VERIFICACAO
          FROM
            (SELECT HRO2.CD_REGISTRO_OCORRENCIA,
              HRO2.DT_ACEITACAO,
              HRO2.DS_ACAO
            FROM DBAPORTAL.HISTORICO_REG_OCORRENCIA HRO2
            WHERE HRO2.CD_REGISTRO_OCORRENCIA       = RO.CD_REGISTRO_OCORRENCIA
            ) PIVOT( MAX(DT_ACEITACAO) FOR DS_ACAO IN ('Verificação concluída.' AS DATA_VERIFICACAO) )
          ) AS DATA_VERIFICACAO,

  RO.CD_ATENDIMENTO,
  --OC.CD_TIPO_OCORRENCIA,
  OC.NM_OCORRENCIA,
  --RO.CD_OCORRENCIA,
  OC.DS_OCORRENCIA,
  RO.TP_CRITICIDADE,
  --RO.CD_METODO_DETECCAO_OCORRENCIA AS CD_DETECAO, 
  MDO.DS_METODO_DETECCAO AS DS_DETECAO,
  --RO.CD_ACAO_IMEDIATA_OCORRENCIA AS CD_ACAO,
  AIO.DS_ACAO_IMEDIATA,
  DECODE(RO.TP_CRITICIDADE, 1,'NÃO SE APLICA',2, 'NC-MAIOR', 3, 'NC-MENOR') DS_CRITICIDADE,
  DECODE (RO.SN_PROCEDE,'S','SIM','N','NÃO',NULL,'EM ABERTO') SN_PROCEDE,
  FQO.CD_FLUXO_OCORRENCIA,
  FOA.NM_FLUXO_OCORRENCIA,
  FQO.CD_FLUXO_OCORRENCIA AS N2,
  DECODE(FQO.TP_SITUACAO,'C','CONCLUIDO','D','ATRASADO','A','AGUARDANDO CONLUSÃO','R','RECUSADO')TP_SITUACAO_ETAPA,
  HRO.TP_ACAO,
  HRO.DS_ACAO,
  FQO.TP_SITUACAO,
  CASE
    WHEN RO.TP_GRAU_NEA = 'N' THEN 'DANO LEVE'
    WHEN RO.TP_GRAU_NEA = '0' THEN 'DANO MODERADO'
    WHEN RO.TP_GRAU_NEA = 'L' THEN 'EVENTO SENTINELA'
    WHEN RO.TP_GRAU_NEA = 'M' THEN 'NÃO PREVENÍVEL'
    WHEN RO.TP_GRAU_NEA = 'G' THEN 'DANO GRANDE'
    WHEN RO.TP_GRAU_NEA IS NULL THEN 'NENHUM DANO'
    WHEN RO.TP_INCIDENTE = 'C' THEN 'CIRCUNSTÂNCIA DE RISCO'
    WHEN RO.TP_INCIDENTE = 'N' THEN 'NEAR MISS(Quase Erro)'
    END TP_INC_NEA,
     
  /*NVL (NVL (DECODE (RO.TP_INCIDENTE,'C','CIRCUNSTÂNCIA DE RISCO', 'N','NEAR MISS(Quase Erro'),
  DECODE (RO.TP_GRAU_NEA, 'N', 'DANO LEVE','0','DANO MODERADO','L','EVENTO SENTINELA','M','NÃO PREVENÍVEL','G','DANO GRANDE')),'NENHUM DANO') AS TP_INC_NEA,*/
  (SELECT CD_USUARIO_PORTAL FROM DBAPORTAL.PESSOA WHERE CD_PESSOA = HRO.ID_RESPONSAVEL_FLUXO)AS DRT_RESP_FLUXO,
  NVL((SELECT DS_CENTRO_CUSTO FROM DBAPORTAL.CENTRO_CUSTO WHERE CD_CENTRO_CUSTO = HRO.ID_RESPONSAVEL_FLUXO), 
  (SELECT DS_PESSOA FROM DBAPORTAL.PESSOA WHERE CD_PESSOA = HRO.ID_RESPONSAVEL_FLUXO)) AS DS_RESP_FLUXO,
  HRO.TP_ANALISE,
  /*NVL((SELECT DS_PAPEL FROM DBAPORTAL.VW_PAPEL WHERE CD_PAPEL = FQO.CD_PAPEL_RESP),
  (SELECT DS_CENTRO_CUSTO FROM DBAPORTAL.CENTRO_CUSTO WHERE CD_CENTRO_CUSTO = FQO.CD_CENTRO_CUSTO_RESP)) AS TP_PAPEL_RESP,
  FQO.TP_RESPONSAVEL_FLUXO,*/
    RO.DS_RESUMO,
  RO.CD_ORGANIZACAO_REGISTRANTE AS EMPRESA_REGISTRANTE, 
  (SELECT DS_CENTRO_CUSTO FROM DBAPORTAL.CENTRO_CUSTO WHERE CD_CENTRO_CUSTO = RO.CD_CENTRO_CUSTO_REGISTRANTE) AS ST_REGISTRANTE,
  (SELECT CD_USUARIO_PORTAL FROM DBAPORTAL.PESSOA WHERE CD_PESSOA = RO.ID_USUARIO_REGISTRANTE) AS DRT_REGISTRANTE,
  RO.CD_ORGANIZACAO_RELATOR AS EMPRESA_RELATOR, 
  (SELECT DS_CENTRO_CUSTO FROM DBAPORTAL.CENTRO_CUSTO WHERE CD_CENTRO_CUSTO = RO.CD_CENTRO_CUSTO_RELATOR) AS ST_RELATOR, 
  (SELECT CD_USUARIO_PORTAL FROM DBAPORTAL.PESSOA WHERE CD_PESSOA = RO.ID_USUARIO_RELATOR) AS DRT_RELATOR
   --RO.DS_REGISTRO
FROM 
  DBAPORTAL.REGISTRO_OCORRENCIA RO, 
  DBAPORTAL.OCORRENCIA OC, 
  DBAPORTAL.METODO_DETECCAO_OCORRENCIA MDO, 
  DBAPORTAL.ACAO_IMEDIATA_OCORRENCIA AIO,  
  DBAPORTAL.FLUXO_OCORRENCIA FOA,
  DBAPORTAL.HISTORICO_REG_OCORRENCIA HRO,
  DBAPORTAL.FLUXO_QUADRO_OCORRENCIA FQO

WHERE RO.CD_OCORRENCIA = OC.CD_OCORRENCIA
AND RO.CD_METODO_DETECCAO_OCORRENCIA = MDO.CD_METODO_DETECCAO_OCORRENCIA(+)
AND RO.CD_ACAO_IMEDIATA_OCORRENCIA = AIO.CD_ACAO_IMEDIATA_OCORRENCIA(+)
AND FQO.CD_FLUXO_OCORRENCIA = FOA.CD_FLUXO_OCORRENCIA
AND RO.CD_REGISTRO_OCORRENCIA = HRO.CD_REGISTRO_OCORRENCIA
AND RO.CD_REGISTRO_OCORRENCIA = FQO.CD_REGISTRO_OCORRENCIA

AND RO.DT_REGISTRO BETWEEN TO_DATE ('01/01/2023','DD/MM/RRRR') AND SYSDATE
AND HRO.TP_ACAO NOT IN ('V')
AND FQO.TP_SITUACAO NOT IN ('A')
AND HRO.CD_FLUXO_OCORRENCIA NOT IN (4,5)
--AND RO.CD_REGISTRO_OCORRENCIA = 32076
--AND OC.CD_TIPO_OCORRENCIA = 101
--AND OC.CD_OCORRENCIA = 242
/*
AND RO.CD_REGISTRO_OCORRENCIA IN (
55994 -- FASE FINALIZADA
,54971 --FASE ANALISE
,56203 --FASE AVALIA
,54301 --FASE VERIFICA
,55167 --FASE ARQUIVA
)
*/
--ORDER BY RO.DT_REGISTRO ASC,HRO.CD_FLUXO_OCORRENCIA DESC,NR_ORD
)BASE
WHERE NR_ORD IN (1)
--AND NR_ORDENACAO IN (1)
)
/*
GROUP BY 
STATUS_SITUACAO, TP_SITUACAO_ETAPA, TP_SITUACAO, TP_ACAO, DS_ACAO, N2, CD_REGISTRO, NR_ORD, QT_SLA, DATA_ATUAL, 
DT_INTEGRA, DT_REGISTRO, DH_OCORRIDO, HR_OCORRIDO, DT_MUDANCA_FLUXO, DT_ACEITACAO, DS_COMENTARIO, DT_CONCLUSAO, 
DATA_AVALIACAO, DATA_ANALISE, DATA_VERIFICACAO, EMPRESA_REGISTRANTE, ST_REGISTRANTE, DRT_REGISTRANTE, EMPRESA_RELATOR, 
ST_RELATOR, DRT_RELATOR, CD_ATENDIMENTO, CD_PACIENTE, CD_TIPO_OCORRENCIA, NM_OCORRENCIA, CD_OCORRENCIA, DS_OCORRENCIA, 
TP_CRITICIDADE, CD_DETECAO, DS_DETECAO, CD_ACAO, DS_ACAO_IMEDIATA, DS_CRITICIDADE, SN_PROCEDE, CD_FLUXO_OCORRENCIA, NM_FLUXO_OCORRENCIA, 
TP_INC_NEA, DRT_RESP_FLUXO, DS_RESP_FLUXO, TP_ANALISE, TP_PAPEL_RESP, TP_RESPONSAVEL_FLUXO, DS_RESUMO, DS_REGISTRO,NR_ORDENACAO
*/

ORDER BY cd_registro, N2 DESC
